version: '3.8'

services:
  # backend:
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/main_db_v1?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
  #     SPRING_DATASOURCE_USERNAME: user
  #     SPRING_DATASOURCE_PASSWORD: user-pw
  #   depends_on:
  #     mysql-db:
  #       condition: service_healthy
  #   networks:
  #     - app-network
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #     start_period: 30s
  #   restart: on-failure

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80" # Maps port 3000 on host
    environment:
      REACT_APP_API_URL: http://backend:8080
    # depends_on:
    #   backend:
    #     condition: service_healthy # Ensure backend is ready before frontend tries to connect
    networks:
      - app-network
    restart: on-failure # Or 'always' depending on preference

  # mysql-db:
  #   image: mysql:8.0
  #   container_name: mysql-container
  #   ports:
  #     - "3306:3306"
  #   environment:
  #     MYSQL_ROOT_PASSWORD: password
  #     MYSQL_DATABASE: main_db_v1
  #     MYSQL_USER: user
  #     MYSQL_PASSWORD: user-pw
  #   volumes:
  #     - db-data:/var/lib/mysql
  #   healthcheck:
  #     test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "user", "-puser-pw"]
  #     timeout: 20s
  #     retries: 10
  #     interval: 3s
  #   networks:
  #     - app-network
  #   restart: always

volumes:
  db-data:

networks:
  app-network:
    driver: bridge
